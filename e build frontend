[1mdiff --git a/frontend/src/app/page.tsx b/frontend/src/app/page.tsx[m
[1mindex 7e039f9..de40554 100644[m
[1m--- a/frontend/src/app/page.tsx[m
[1m+++ b/frontend/src/app/page.tsx[m
[36m@@ -1,109 +1,47 @@[m
 "use client";[m
[32m+[m[32mimport { useEffect, useState } from "react";[m
[32m+[m[32mimport { jwtDecode } from "jwt-decode";[m
 [m
[31m-import NextImage from "next/image";[m
[31m-import { useState } from "react";[m
[31m-import { useRouter } from "next/navigation";[m
[31m-[m
[31m-export default function Home() {[m
[31m-  const router = useRouter();[m
[31m-  const [email, setEmail] = useState("");[m
[31m-  const [password, setPassword] = useState("");[m
[31m-  const [error, setError] = useState("");[m
[31m-  const [loading, setLoading] = useState(false);[m
[31m-[m
[31m-  const handleSubmit = async (e: React.FormEvent) => {[m
[31m-    e.preventDefault();[m
[31m-    setError("");[m
[31m-    setLoading(true);[m
[31m-[m
[31m-    try {[m
[31m-      const res = await fetch("http://localhost:8010/api/token/", {[m
[31m-        method: "POST",[m
[31m-        headers: {[m
[31m-          "Content-Type": "application/json",[m
[31m-        },[m
[31m-        body: JSON.stringify({email, password}),[m
[31m-      });[m
[31m-[m
[31m-      const data = await res.json();[m
[32m+[m[32minterface JwtPayload {[m
[32m+[m[32m  email: string;[m
[32m+[m[32m  exp: number;[m
[32m+[m[32m}[m
 [m
[31m-      if (!res.ok) {[m
[31m-        throw new Error(data.detail || "Login failed");[m
[32m+[m[32mexport default function HomePage() {[m
[32m+[m[32m  const [email, setEmail] = useState<string | null>(null);[m
[32m+[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    const token = localStorage.getItem("access");[m
[32m+[m[32m    if (token) {[m
[32m+[m[32m      try {[m
[32m+[m[32m        const decoded: JwtPayload = jwtDecode(token);[m
[32m+[m[32m        setEmail(decoded.email);[m
[32m+[m[32m      } catch (err) {[m
[32m+[m[32m        console.error("Invalid token:", err);[m
       }[m
[31m-[m
[31m-      // Save tokens (you can use cookies or localStorage)[m
[31m-      localStorage.setItem("access", data.access);[m
[31m-      localStorage.setItem("refresh", data.refresh);[m
[31m-[m
[31m-      router.push("/dashboard");[m
[31m-    } catch (err: any) {[m
[31m-      setError(err.message || "An error occurred");[m
[31m-    } finally {[m
[31m-      setLoading(false);[m
     }[m
[31m-  };[m
[32m+[m[32m  }, []);[m
 [m
   return ([m
[31m-    <div className="min-h-screen flex items-center justify-center bg-gray-50">[m
[31m-      <div className="w-full max-w-sm bg-white shadow-lg rounded-2xl p-8">[m
[31m-        <div className="flex justify-center mb-6">[m
[31m-          <NextImage[m
[31m-            src="/logo.png"[m
[31m-            alt="App logo"[m
[31m-            width={120}[m
[31m-            height={120}[m
[31m-            className="rounded-full"[m
[31m-            priority[m
[31m-          />[m
[31m-        </div>[m
[31m-[m
[31m-        <h1 className="text-2xl font-semibold text-center mb-6">[m
[31m-          Welcome to AIAL[m
[31m-        </h1>[m
[31m-[m
[31m-        <form onSubmit={handleSubmit} className="space-y-4">[m
[31m-          <div>[m
[31m-            <label className="block text-sm font-medium mb-1" htmlFor="email">[m
[31m-              Email[m
[31m-            </label>[m
[31m-            <input[m
[31m-              id="email"[m
[31m-              type="email"[m
[31m-              value={email}[m
[31m-              onChange={(e) => setEmail(e.target.value)}[m
[31m-              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"[m
[31m-              required[m
[31m-            />[m
[31m-          </div>[m
[31m-[m
[31m-          <div>[m
[31m-            <label[m
[31m-              className="block text-sm font-medium mb-1"[m
[31m-              htmlFor="password"[m
[31m-            >[m
[31m-              Password[m
[31m-            </label>[m
[31m-            <input[m
[31m-              id="password"[m
[31m-              type="password"[m
[31m-              value={password}[m
[31m-              onChange={(e) => setPassword(e.target.value)}[m
[31m-              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"[m
[31m-              required[m
[31m-            />[m
[31m-          </div>[m
[31m-[m
[31m-          {error && <p className="text-red-500 text-sm">{error}</p>}[m
[31m-[m
[31m-          <button[m
[31m-            type="submit"[m
[31m-            disabled={loading}[m
[31m-            className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition disabled:opacity-50"[m
[32m+[m[32m    <div className="flex flex-col items-center justify-center h-screen">[m
[32m+[m[32m      {email ? ([m
[32m+[m[32m        <>[m
[32m+[m[32m          <h1 className="text-2xl mb-4">You are logged in as {email}</h1>[m
[32m+[m[32m          <a[m
[32m+[m[32m            href="/dashboard"[m
[32m+[m[32m            className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700"[m
           >[m
[31m-            {loading ? "Signing in..." : "Sign in"}[m
[31m-          </button>[m
[31m-        </form>[m
[31m-      </div>[m
[32m+[m[32m            Go to Dashboard[m
[32m+[m[32m          </a>[m
[32m+[m[32m        </>[m
[32m+[m[32m      ) : ([m
[32m+[m[32m        <a[m
[32m+[m[32m          href="/login"[m
[32m+[m[32m          className="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700"[m
[32m+[m[32m        >[m
[32m+[m[32m          Login[m
[32m+[m[32m        </a>[m
[32m+[m[32m      )}[m
     </div>[m
   );[m
 }[m
